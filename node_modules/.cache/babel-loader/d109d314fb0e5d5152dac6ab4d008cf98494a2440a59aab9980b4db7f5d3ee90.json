{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LUIS\\\\Documents\\\\Tests\\\\tt-education\\\\tt-education-app\\\\src\\\\components\\\\tmdb-search.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchMovies = () => {\n  _s();\n  const [genres, setGenres] = useState([]);\n  const [selectedGenre, setSelectedGenre] = useState('');\n  const [year, setYear] = useState('');\n  const [results, setResults] = useState([]);\n  useEffect(() => {\n    const fetchGenres = async () => {\n      try {\n        const response = await axios.get('https://api.themoviedb.org/3/genre/movie/list', {\n          params: {\n            api_key: 'YOUR_API_KEY'\n          }\n        });\n        setGenres(response.data.genres);\n      } catch (error) {\n        console.error('Error fetching genres:', error);\n      }\n    };\n    fetchGenres();\n  }, []);\n  const handleSearch = async () => {\n    try {\n      const response = await axios.get('https://api.themoviedb.org/3/discover/movie', {\n        params: {\n          api_key: 'YOUR_API_KEY',\n          with_genres: selectedGenre,\n          year: year\n        }\n      });\n      setResults(response.data.results);\n    } catch (error) {\n      console.error('Error searching movies:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Search Movies and TV Shows\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"genre\",\n        children: \"Genre:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"genre\",\n        value: selectedGenre,\n        onChange: e => setSelectedGenre(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a genre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), genres.map(genre => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: genre.id,\n          children: genre.name\n        }, genre.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"year\",\n        children: \"Year:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"year\",\n        value: year,\n        onChange: e => setYear(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), results.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recent-movies-container\",\n      children: results.map(result => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: result.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://image.tmdb.org/t/p/w500${result.poster_path}`,\n          alt: result.title,\n          className: \"movie-poster\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Rating: \", result.vote_average]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: result.overview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this)]\n      }, result.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchMovies, \"lpzYsI1RIlltco3wYQOxvL4cDNM=\");\n_c = SearchMovies;\nexport default SearchMovies;\nvar _c;\n$RefreshReg$(_c, \"SearchMovies\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","SearchMovies","_s","genres","setGenres","selectedGenre","setSelectedGenre","year","setYear","results","setResults","fetchGenres","response","get","params","api_key","data","error","console","handleSearch","with_genres","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","value","onChange","e","target","map","genre","name","type","onClick","length","className","result","title","src","poster_path","alt","vote_average","overview","_c","$RefreshReg$"],"sources":["C:/Users/LUIS/Documents/Tests/tt-education/tt-education-app/src/components/tmdb-search.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst SearchMovies = () => {\r\n  const [genres, setGenres] = useState([]);\r\n  const [selectedGenre, setSelectedGenre] = useState('');\r\n  const [year, setYear] = useState('');\r\n  const [results, setResults] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchGenres = async () => {\r\n      try {\r\n        const response = await axios.get('https://api.themoviedb.org/3/genre/movie/list', {\r\n          params: {\r\n            api_key: 'YOUR_API_KEY',\r\n          },\r\n        });\r\n\r\n        setGenres(response.data.genres);\r\n      } catch (error) {\r\n        console.error('Error fetching genres:', error);\r\n      }\r\n    };\r\n\r\n    fetchGenres();\r\n  }, []);\r\n\r\n  const handleSearch = async () => {\r\n    try {\r\n      const response = await axios.get('https://api.themoviedb.org/3/discover/movie', {\r\n        params: {\r\n          api_key: 'YOUR_API_KEY',\r\n          with_genres: selectedGenre,\r\n          year: year,\r\n        },\r\n      });\r\n\r\n      setResults(response.data.results);\r\n    } catch (error) {\r\n      console.error('Error searching movies:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Search Movies and TV Shows</h2>\r\n      <div>\r\n        <label htmlFor=\"genre\">Genre:</label>\r\n        <select id=\"genre\" value={selectedGenre} onChange={e => setSelectedGenre(e.target.value)}>\r\n          <option value=\"\">Select a genre</option>\r\n          {genres.map(genre => (\r\n            <option key={genre.id} value={genre.id}>\r\n              {genre.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"year\">Year:</label>\r\n        <input type=\"text\" id=\"year\" value={year} onChange={e => setYear(e.target.value)} />\r\n      </div>\r\n      <button onClick={handleSearch}>Search</button>\r\n      {results.length > 0 && (\r\n        <div className=\"recent-movies-container\">\r\n          {results.map(result => (\r\n            <div key={result.id} className=\"movie-card\">\r\n              <h3>{result.title}</h3>\r\n              <img\r\n                src={`https://image.tmdb.org/t/p/w500${result.poster_path}`}\r\n                alt={result.title}\r\n                className=\"movie-poster\"\r\n              />\r\n              <p>Rating: {result.vote_average}</p>\r\n              <p>{result.overview}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchMovies;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}