{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LUIS\\\\Documents\\\\Tests\\\\tt-education\\\\tt-education-app\\\\src\\\\components\\\\tmdb-search.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchMovies = () => {\n  _s();\n  const [genres, setGenres] = useState([]);\n  const [selectedGenre, setSelectedGenre] = useState('');\n  const [year, setYear] = useState('');\n  const [results, setResults] = useState([]);\n  const [movies, setMovies] = useState([]);\n  const [expandedMovieId, setExpandedMovieId] = useState(null);\n  const [hideHomepageMovies, setHideHomepageMovies] = useState(false);\n  useEffect(() => {\n    const fetchGenres = async () => {\n      try {\n        const response = await axios.get('https://api.themoviedb.org/3/genre/movie/list', {\n          params: {\n            api_key: 'a6c3b3938c76f38f3289b3291fd0629f'\n          }\n        });\n        setGenres(response.data.genres);\n      } catch (error) {\n        console.error('Error fetching genres:', error);\n      }\n    };\n    fetchGenres();\n  }, []);\n  const handleSearch = async () => {\n    try {\n      const response = await axios.get('https://api.themoviedb.org/3/discover/movie', {\n        params: {\n          api_key: 'a6c3b3938c76f38f3289b3291fd0629f',\n          with_genres: selectedGenre,\n          year: year\n        }\n      });\n      setResults(response.data.results);\n    } catch (error) {\n      console.error('Error searching movies:', error);\n    }\n    setHideHomepageMovies(true);\n  };\n  const toggleExpand = movieId => {\n    if (expandedMovieId === movieId) {\n      setExpandedMovieId(null);\n    } else {\n      setExpandedMovieId(movieId);\n    }\n  };\n  const renderOverviewText = (overview, movieId) => {\n    if (overview.length <= 200 || expandedMovieId === movieId) {\n      return overview;\n    }\n    return overview.slice(0, 200) + '...';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recent-movies-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Search Movies and TV Shows\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"genre-select-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"genre\",\n          children: \"Genre:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"genre\",\n          value: selectedGenre,\n          onChange: e => setSelectedGenre(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a genre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), genres.map(genre => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: genre.id,\n            children: genre.name\n          }, genre.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"year-field-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"year\",\n          children: \"Year:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"year\",\n          value: year,\n          onChange: e => setYear(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), results.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-grid\",\n      children: results.map(result => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: result.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://image.tmdb.org/t/p/w500${result.poster_path}`,\n          alt: result.title,\n          className: \"movie-poster\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Rating: \", result.vote_average]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: renderOverviewText(result.overview, result.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this), result.overview.length > 200 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"toggle-button\",\n          onClick: () => toggleExpand(result.id),\n          children: expandedMovieId === result.id ? 'Read Less' : 'Read More'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, result.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchMovies, \"XarM63gZZ8W5pQEEUTn7VvHBxLs=\");\n_c = SearchMovies;\nexport default SearchMovies;\nvar _c;\n$RefreshReg$(_c, \"SearchMovies\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","SearchMovies","_s","genres","setGenres","selectedGenre","setSelectedGenre","year","setYear","results","setResults","movies","setMovies","expandedMovieId","setExpandedMovieId","hideHomepageMovies","setHideHomepageMovies","fetchGenres","response","get","params","api_key","data","error","console","handleSearch","with_genres","toggleExpand","movieId","renderOverviewText","overview","length","slice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","value","onChange","e","target","map","genre","name","type","onClick","result","title","src","poster_path","alt","vote_average","_c","$RefreshReg$"],"sources":["C:/Users/LUIS/Documents/Tests/tt-education/tt-education-app/src/components/tmdb-search.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst SearchMovies = () => {\r\n  const [genres, setGenres] = useState([]);\r\n  const [selectedGenre, setSelectedGenre] = useState('');\r\n  const [year, setYear] = useState('');\r\n  const [results, setResults] = useState([]);\r\n\r\n  const [movies, setMovies] = useState([]);\r\n  const [expandedMovieId, setExpandedMovieId] = useState(null);\r\n  const [hideHomepageMovies, setHideHomepageMovies] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchGenres = async () => {\r\n      try {\r\n        const response = await axios.get('https://api.themoviedb.org/3/genre/movie/list', {\r\n          params: {\r\n            api_key: 'a6c3b3938c76f38f3289b3291fd0629f',\r\n          },\r\n        });\r\n\r\n        setGenres(response.data.genres);\r\n      } catch (error) {\r\n        console.error('Error fetching genres:', error);\r\n      }\r\n    };\r\n\r\n    fetchGenres();\r\n  }, []);\r\n\r\n  const handleSearch = async () => {\r\n    try {\r\n      const response = await axios.get('https://api.themoviedb.org/3/discover/movie', {\r\n        params: {\r\n          api_key: 'a6c3b3938c76f38f3289b3291fd0629f',\r\n          with_genres: selectedGenre,\r\n          year: year,\r\n        },\r\n      });\r\n\r\n      setResults(response.data.results);\r\n    } catch (error) {\r\n      console.error('Error searching movies:', error);\r\n    }\r\n    setHideHomepageMovies(true);\r\n  };\r\n\r\n  const toggleExpand = movieId => {\r\n    if (expandedMovieId === movieId) {\r\n      setExpandedMovieId(null);\r\n    } else {\r\n      setExpandedMovieId(movieId);\r\n    }\r\n  };\r\n\r\n  const renderOverviewText = (overview, movieId) => {\r\n    if (overview.length <= 200 || expandedMovieId === movieId) {\r\n      return overview;\r\n    }\r\n\r\n    return overview.slice(0, 200) + '...';\r\n  };\r\n\r\n  return (\r\n    <div className=\"recent-movies-container\">\r\n      <h2>Search Movies and TV Shows</h2>\r\n\r\n      <div className=\"search-form\">\r\n        <div className=\"genre-select-container\">\r\n            <label htmlFor=\"genre\">Genre:</label>\r\n            <select id=\"genre\" value={selectedGenre} onChange={e => setSelectedGenre(e.target.value)}>\r\n            <option value=\"\">Select a genre</option>\r\n            {genres.map(genre => (\r\n                <option key={genre.id} value={genre.id}>\r\n                {genre.name}\r\n                </option>\r\n            ))}\r\n            </select>\r\n        </div>\r\n        <div className=\"year-field-container\">\r\n            <label htmlFor=\"year\">Year:</label>\r\n            <input type=\"text\" id=\"year\" value={year} onChange={e => setYear(e.target.value)} />\r\n        </div>\r\n        <button onClick={handleSearch}>Search</button>\r\n      </div>\r\n\r\n      {results.length > 0 && (\r\n            <div className=\"search-grid\">\r\n            {results.map(result => (\r\n                <div key={result.id} className=\"movie-card\">\r\n                <h3>{result.title}</h3>\r\n                <img\r\n                    src={`https://image.tmdb.org/t/p/w500${result.poster_path}`}\r\n                    alt={result.title}\r\n                    className=\"movie-poster\"\r\n                />\r\n                <p>Rating: {result.vote_average}</p>\r\n                <p>{renderOverviewText(result.overview, result.id)}</p>\r\n                {result.overview.length > 200 && (\r\n                    <button className=\"toggle-button\" onClick={() => toggleExpand(result.id)}>\r\n                    {expandedMovieId === result.id ? 'Read Less' : 'Read More'}\r\n                    </button>\r\n                )}\r\n                </div>\r\n            ))}\r\n          </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchMovies;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}