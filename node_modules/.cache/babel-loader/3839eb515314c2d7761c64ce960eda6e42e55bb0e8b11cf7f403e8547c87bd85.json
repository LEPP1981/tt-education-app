{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LUIS\\\\Documents\\\\Tests\\\\tt-education\\\\tt-education-app\\\\src\\\\components\\\\tmdb-search.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchMovies = () => {\n  _s();\n  const [genres, setGenres] = useState([]);\n  const [selectedGenre, setSelectedGenre] = useState('');\n  const [year, setYear] = useState('');\n  const [results, setResults] = useState([]);\n  const [movies, setMovies] = useState([]);\n  const [expandedMovieId, setExpandedMovieId] = useState(null);\n  useEffect(() => {\n    const fetchGenres = async () => {\n      try {\n        const response = await axios.get('https://api.themoviedb.org/3/genre/movie/list', {\n          params: {\n            api_key: 'a6c3b3938c76f38f3289b3291fd0629f'\n          }\n        });\n        setGenres(response.data.genres);\n      } catch (error) {\n        console.error('Error fetching genres:', error);\n      }\n    };\n    fetchGenres();\n  }, []);\n  const handleSearch = async () => {\n    try {\n      const response = await axios.get('https://api.themoviedb.org/3/discover/movie', {\n        params: {\n          api_key: 'a6c3b3938c76f38f3289b3291fd0629f',\n          with_genres: selectedGenre,\n          year: year\n        }\n      });\n      setResults(response.data.results);\n    } catch (error) {\n      console.error('Error searching movies:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-movies-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Search Movies and TV Shows\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"genre\",\n        children: \"Genre:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"genre\",\n        value: selectedGenre,\n        onChange: e => setSelectedGenre(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a genre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), genres.map(genre => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: genre.id,\n          children: genre.name\n        }, genre.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"year\",\n        children: \"Year:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"year\",\n        value: year,\n        onChange: e => setYear(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), results.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recent-movies-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movies-grid\",\n        children: results.map(result => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: result.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://image.tmdb.org/t/p/w500${result.poster_path}`,\n            alt: result.title,\n            className: \"movie-poster\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Rating: \", result.vote_average]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: renderOverviewText(result.overview, result.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this), result.overview.length > 200 && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"toggle-button\",\n            onClick: () => toggleExpand(result.id),\n            children: expandedMovieId === result.id ? 'Read Less' : 'Read More'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 21\n          }, this)]\n        }, result.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchMovies, \"llK19VQsubCK18ZJ56ZTC3vheA4=\");\n_c = SearchMovies;\nexport default SearchMovies;\nvar _c;\n$RefreshReg$(_c, \"SearchMovies\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","SearchMovies","_s","genres","setGenres","selectedGenre","setSelectedGenre","year","setYear","results","setResults","movies","setMovies","expandedMovieId","setExpandedMovieId","fetchGenres","response","get","params","api_key","data","error","console","handleSearch","with_genres","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","value","onChange","e","target","map","genre","name","type","onClick","length","result","title","src","poster_path","alt","vote_average","renderOverviewText","overview","toggleExpand","_c","$RefreshReg$"],"sources":["C:/Users/LUIS/Documents/Tests/tt-education/tt-education-app/src/components/tmdb-search.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst SearchMovies = () => {\r\n  const [genres, setGenres] = useState([]);\r\n  const [selectedGenre, setSelectedGenre] = useState('');\r\n  const [year, setYear] = useState('');\r\n  const [results, setResults] = useState([]);\r\n\r\n  const [movies, setMovies] = useState([]);\r\n  const [expandedMovieId, setExpandedMovieId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchGenres = async () => {\r\n      try {\r\n        const response = await axios.get('https://api.themoviedb.org/3/genre/movie/list', {\r\n          params: {\r\n            api_key: 'a6c3b3938c76f38f3289b3291fd0629f',\r\n          },\r\n        });\r\n\r\n        setGenres(response.data.genres);\r\n      } catch (error) {\r\n        console.error('Error fetching genres:', error);\r\n      }\r\n    };\r\n\r\n    fetchGenres();\r\n  }, []);\r\n\r\n  const handleSearch = async () => {\r\n    try {\r\n      const response = await axios.get('https://api.themoviedb.org/3/discover/movie', {\r\n        params: {\r\n          api_key: 'a6c3b3938c76f38f3289b3291fd0629f',\r\n          with_genres: selectedGenre,\r\n          year: year,\r\n        },\r\n      });\r\n\r\n      setResults(response.data.results);\r\n    } catch (error) {\r\n      console.error('Error searching movies:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-movies-container\">\r\n      <h2>Search Movies and TV Shows</h2>\r\n      <div>\r\n        <label htmlFor=\"genre\">Genre:</label>\r\n        <select id=\"genre\" value={selectedGenre} onChange={e => setSelectedGenre(e.target.value)}>\r\n          <option value=\"\">Select a genre</option>\r\n          {genres.map(genre => (\r\n            <option key={genre.id} value={genre.id}>\r\n              {genre.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"year\">Year:</label>\r\n        <input type=\"text\" id=\"year\" value={year} onChange={e => setYear(e.target.value)} />\r\n      </div>\r\n      <button onClick={handleSearch}>Search</button>\r\n      {results.length > 0 && (\r\n        <div className=\"recent-movies-container\">\r\n            <div className=\"movies-grid\">\r\n            {results.map(result => (\r\n                <div key={result.id} className=\"movie-card\">\r\n                <h3>{result.title}</h3>\r\n                <img\r\n                    src={`https://image.tmdb.org/t/p/w500${result.poster_path}`}\r\n                    alt={result.title}\r\n                    className=\"movie-poster\"\r\n                />\r\n                <p>Rating: {result.vote_average}</p>\r\n                <p>{renderOverviewText(result.overview, result.id)}</p>\r\n                {result.overview.length > 200 && (\r\n                    <button className=\"toggle-button\" onClick={() => toggleExpand(result.id)}>\r\n                    {expandedMovieId === result.id ? 'Read Less' : 'Read More'}\r\n                    </button>\r\n                )}\r\n                </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchMovies;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}